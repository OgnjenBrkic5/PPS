unit RadnickiNalog;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, System.Rtti,
  FMX.Grid.Style, FMX.StdCtrls, FMX.Grid, FMX.ScrollBox, FMX.Objects,
  FMX.Controls.Presentation, FMX.Layouts, DataModule;

type
  TFRadnickiNalog = class(TForm)
    FormBackgroundLayout: TLayout;
    FormBackgroundRectangle: TRectangle;
    InputeRectangle: TRectangle;
    BtnIzaberiUslugu: TButton;
    Line2: TLine;
    Line1: TLine;
    ZakazivanjaStringGrid: TStringGrid;
    colMusterija: TColumn;
    colUsluga: TColumn;
    colCena: TColumn;
    colDatum: TColumn;
    colTermin: TColumn;
    PregledZakazivanjaLabel: TLabel;
    ImeRadnikaLabel: TLabel;
    OdjaviSeBtn: TButton;
    StanjeAlataBtn: TButton;
    RecenzijeBtn: TButton;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure OdjaviSeBtnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    IDRadnika: integer;
    KorisnickoIme: String;
    Email: String;
    SifraNaloga: String;
  end;

var
  FRadnickiNalog: TFRadnickiNalog;

implementation
uses Prijava;
{$R *.fmx}

procedure TFRadnickiNalog.FormClose(Sender: TObject; var Action: TCloseAction);
begin
      application.Terminate;
end;

procedure TFRadnickiNalog.FormShow(Sender: TObject);
begin
      Showmessage(IDRadnika.ToString + ' ' + KorisnickoIme + ' ' + Email + ' ' + SifraNaloga);
      //Showmessage(DateToStr(Now));

      ImeRadnikaLabel.Text:= KorisnickoIme;

      if ZakazivanjaStringGrid.RowCount > 0 then
      begin
       {
             for var counter := 0 to ZakazivanjaStringGrid.RowCount-1 do
             begin
                      ZakazivanjaStringGrid.Cells[0,counter]:= '';
                      ZakazivanjaStringGrid.Cells[1,counter]:= '';
                      ZakazivanjaStringGrid.Cells[2,counter]:= '';
                      ZakazivanjaStringGrid.Cells[3,counter]:= '';
                      ZakazivanjaStringGrid.Cells[4,counter]:= '';
             end;
        }
             ZakazivanjaStringGrid.RowCount:= 0;
       end;


      with FDataModule do
      begin
            FDQueryTemp.Sql.Clear;
            FDQueryTemp.Sql.Text := 'SELECT * FROM Zakazivanje WHERE IDRadnika = ' + IDRadnika.ToString +' AND Datum >= :Datum  ORDER BY Datum ASC';
            FDQueryTemp.ParamByName('Datum').AsDate:= Now;
            FDQueryTemp.Open;

            var i: integer;
            var rowCount: integer;
            rowCount := FDQueryTemp.RecordCount;

            while not FDQueryTemp.Eof do
            begin
                  //---Showmessage(FDQueryTemp['IDKorisnika']);

                  i := ZakazivanjaStringGrid.RowCount;
                  ZakazivanjaStringGrid.RowCount:= ZakazivanjaStringGrid.RowCount + 1;


                  FDQuerySelectKorisnik.Sql.Clear;
                  FDQuerySelectKorisnik.Sql.Text := 'SELECT KorisnickoIme FROM Korisnik WHERE IDKorisnika = ' + quotedstr(FDQueryTemp['IDKorisnika']);
                  FDQuerySelectKorisnik.Open;

                  //---Showmessage(FDQuerySelectKorisnik['KorisnickoIme']);
                  ZakazivanjaStringGrid.Cells[0, i] := FDQuerySelectKorisnik['KorisnickoIme'];
                  //showmessage('msg1');

                  //---------------------------------------------------------------------------------

                  //Potencijalno izmenjen deo

                  FDQuerySelectSifarnikUsluga.Sql.Clear;
                  FDQuerySelectSifarnikUsluga.Sql.Text := 'SELECT NazivUsluge, CenaUsluge FROM SifarnikUsluga WHERE IDUsluge = ' + quotedstr(FDQueryTemp['IDUsluge']);
                  FDQuerySelectSifarnikUsluga.Open;


                  //---Showmessage(FDQuerySelectSifarnikUsluga['NazivUsluge']);
                  //---Showmessage(FDQuerySelectKorisnik['CenaUsluge']);

                  ZakazivanjaStringGrid.Cells[1,i] :=  FDQuerySelectSifarnikUsluga['NazivUsluge'];
                  ZakazivanjaStringGrid.Cells[2,i] :=  FDQuerySelectSifarnikUsluga['CenaUsluge'];
                  //showmessage('msg2');

                  //---------------------------------------------------------------------------------


                  //prepraviti Datum

                  //showmessage(quotedstr(DateToStr(FDQueryTemp['Datum'])));
                  //showmessage(quotedstr(FDQueryTemp['IDTermina']));

                  //DecodeDate(FDQueryTemp['Datum'], Year, Month, Day);

                  //showmessage(Year.ToString + ' - ' + Month.ToString + ' - ' + Day.ToString);


                  //Datum:= EncodeDate(Year, Month, Day);
                  //showmessage(DateToStr(Datum));

                  //Datum:= StrToDate(FDQueryTemp['Datum']);
                  //showmessage(DateToStr(Datum));


                  FDQuerySelectDostupniTermini.Sql.Clear;

                  FDQuerySelectDostupniTermini.Sql.Text := 'SELECT Datum FROM DostupniTermini WHERE Datum = :Datum AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina']);
                  //FDQuerySelectDostupniTermini.ParamByName('Datum').AsDateTime := Datum;
                  FDQuerySelectDostupniTermini.ParamByName('Datum').AsDate := FDQueryTemp['Datum'];
                  //FDQuerySelectDostupniTermini.ParamByName('Datum').AsDateTime := FDQueryTemp['Datum'];





                  //FDQuerySelectDostupniTermini.Sql.Text := 'SELECT Datum FROM DostupniTermini WHERE Datum = ' + quotedstr(FDQueryTemp['Datum']) + 'AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina']);


                  //showmessage('SELECT Datum FROM DostupniTermini WHERE Datum =' + quotedstr(DateToStr(FDQueryTemp['Datum'])) + ' AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina'])); //.ToString));

                  //FDQuerySelectDostupniTermini.Sql.Text := 'SELECT Datum FROM DostupniTermini WHERE Datum = ' + quotedstr('2024-06-10') + ' AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina']); //.ToString);
                  //FDQuerySelectDostupniTermini.Sql.Text := 'SELECT Datum FROM DostupniTermini WHERE Datum = ' + quotedstr(DateToStr(Datum)) + ' AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina']); //.ToString);

                  //--------
                  //FDQuerySelectDostupniTermini.Sql.Text := 'SELECT Datum FROM DostupniTermini WHERE Datum = ' + quotedstr(DateToStr(FDQueryTemp['Datum'])) + ' AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina']); //.ToString);
                  //FDQuerySelectDostupniTermini.Sql.Text := 'SELECT Datum FROM DostupniTermini WHERE Datum =' + DateToStr(FDQueryTemp['Datum']) + 'AND IDTermina = ' + quotedstr(FDQueryTemp['IDTermina']);



                  FDQuerySelectDostupniTermini.Open;

                  //---Showmessage(FDQuerySelectDostupniTermini['Datum']);

                  //showmessage(FDQuerySelectDostupniTermini.RecordCount.ToString);

                  //FDQueryTemp.FieldByName('SifraNaloga').AsString;
                  //IstrorijaStringGrid.Cells[3,i] :=  FDQuerySelectDostupniTermini.FieldByName('Datum').AsString;
                  //IstrorijaStringGrid.Cells[3,i] :=  FDQuerySelectDostupniTermini['Datum'].ToString;
                  ZakazivanjaStringGrid.Cells[3,i] :=  FDQuerySelectDostupniTermini['Datum'];
                  //showmessage('msg3');

                  FDQuerySelectMoguciTermini.Sql.Clear;
                  FDQuerySelectMoguciTermini.Sql.Text := 'SELECT PocetakTermina FROM MoguciTermini WHERE  IDTremina =' + quotedstr(FDQueryTemp['IDTermina']);
                  FDQuerySelectMoguciTermini.Open;

                  //---Showmessage(FDQuerySelectMoguciTermini['PocetakTermina']);

                  ZakazivanjaStringGrid.Cells[4,i] :=  FDQuerySelectMoguciTermini['PocetakTermina'];
                  //showmessage('msg4');

                  FDQueryTemp.Next
            end;

            ZakazivanjaStringGrid.AutoCalculateContentSize;
            FDQuerySelectKorisnik.Close;
            FDQuerySelectSifarnikUsluga.Close;
            FDQuerySelectDostupniTermini.Close;
            FDQuerySelectMoguciTermini.Close;
            FDQueryTemp.Close;
        end;

end;

procedure TFRadnickiNalog.OdjaviSeBtnClick(Sender: TObject);
begin
      IDRadnika:= 0;
      KorisnickoIme:= '';
      Email:= '';
      SifraNaloga:= '';

      if ZakazivanjaStringGrid.RowCount > 0 then
       begin
       {
             for var counter := 0 to ZakazivanjaStringGrid.RowCount-1 do
             begin
                      ZakazivanjaStringGrid.Cells[0,counter]:= '';
                      ZakazivanjaStringGrid.Cells[1,counter]:= '';
                      ZakazivanjaStringGrid.Cells[2,counter]:= '';
                      ZakazivanjaStringGrid.Cells[3,counter]:= '';
                      ZakazivanjaStringGrid.Cells[4,counter]:= '';
             end;
       }//<---

             ZakazivanjaStringGrid.RowCount:= 0;
       end;


      FPrijava.Show;
      self.Hide;
end;

end.
